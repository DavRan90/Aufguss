@page "/CreateAdmin"
@attribute [Authorize(Roles = "Admin,SuperAdmin")]

@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="d-flex p-5">
    <div class="card p-4 bg-info-subtle">
        <div class="card-body p-5">
            <h3 class="mb-4">Skapa administratör</h3>
            <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                <div class="mt-3">
                    <InputText class="form-control" @bind-Value="registerModel.Email" type="email" placeholder="Email" />
                </div>
                <div class="mt-3">
                    <InputText class="form-control" @bind-Value="registerModel.Password" type="password" placeholder="Lösenord" />
                </div>
                <div class="mt-3">
                    <InputText class="form-control" @bind-Value="registerModel.PhoneNumber" type="tel" placeholder="Telefonnummer" />
                </div>
                <div class="mt-3">
                    <InputText class="form-control" @bind-Value="registerModel.FirstName" placeholder="Förnamn" />
                </div>
                <div class="mt-3">
                    <InputText class="form-control" @bind-Value="registerModel.SurName" placeholder="Efternamn" />
                </div>
                <button class="btn btn-primary mt-3" type="submit">Spara</button>
            </EditForm>
        </div>
    </div>
</div>


@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

@code {
    private RegisterDto registerModel = new();
    private string errorMessage;

    private async Task HandleRegister()
    {
        var path = new Uri(Http.BaseAddress, "api/auth/create").ToString();

        // var response = await Http.PostAsJsonAsync("https://localhost:7162/api/auth/register", registerModel);
        var response = await Http.PostAsJsonAsync(path, registerModel);

        if (response.IsSuccessStatusCode)
        {
            // Optionally, auto-login or redirect to login
            Navigation.NavigateTo("/login");
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            errorMessage = $"Registration failed: {error}";
        }
    }

    public class RegisterDto
    {
        public string Email { get; set; }
        public string Password { get; set; }
        public string PhoneNumber { get; set; }
        public string FirstName { get; set; }
        public string SurName { get; set; }
    }
}
